//

#include<stdio.h>
void palin(char s1[10]);
int concat(char s1[10],char s2[10]);
void substring(char s1[10],char s2[10],char s3[10],int l);

main()
{
  int choice,l;
  char s1[10],s2[10],s3[10],c;
  printf("\nEnter a string\n");
  scanf("%s",s1);
  
  do
    {
      printf("\n1-Palindrome\n2-Concatenation\n3-Substring\n4-Exit\n");
      printf("\nEnter the choice\n");
      scanf("%d",&choice);

      switch(choice)
	{
	case 1:
	  palin(s1);
	  break;
	case 2:
	  printf("\nEnter the string to concatenate\n");
	  scanf("%s",s2);
	  l=concat(s1,s2);
	  break;
	case 3:
	  printf("\nEnter a substring\n");
	  scanf("%s",s2);
	  printf("\nEnter the string to replace the substring\n");
	  scanf("%s",s3);
	  substring(s1,s2,s3,l);
	  break;
	case 4:
	  printf("\nExiting...!!\n");
	  exit(0);
	default:
	  printf("\nInvalid choice\n");
	}
      printf("\nDo you want to continue...?(y/n)\t");
      scanf("%s",&c);
    }while(c=='y');
}





void palin(char s1[10])
{
  int i,j,l,f=0;
  char s2[10];
  for(l=0;s1[l]!='\0';l++);
  for(i=l-1,j=0;j<l;i--,j++)
    s2[j]=s1[i];
  s2[j]='\0';  
  for(i=0;s1[i]!='\0';i++)
    {
      if(s1[i]!=s2[i])
	{
          f++;
          break;
        }
      else
	f=0;
    }
  if(f==0)
    printf("\nThe string %s is a palindrome\n",s1);
  else
    printf("\nThe string %s is not a palindrome\n",s1);
} 



int concat(char s1[10],char s2[10])
{
  int l,i;
  char s3[10];
  for(l=0;s1[l]!='\0';l++);
  for(i=0;s2[i]!='\0';i++,l++)
    s1[l]=s2[i];
  s1[l]='\0';
  printf("\nThe concatinated string is %s \n",s1);
  for(i=0;s1[i]!='\0';i++);
  return i;
}




void substring(char s1[10],char s2[10],char s3[10],int p)
{
  int i,j,loc,flag=0,k,l;
  for(l=0;s2[l]!='\0';l++);
  for(i=0;i<p;i++)
    {
      if(s1[i]==s2[0])
	{
	  for(j=i+1,k=1;s2[k]!='\0';j++,k++)
	    {
              if(s1[j]==s2[k])
		flag++;
	      else
		flag=0;
	    }
	  loc=i;
	}
    }
  if(flag+1==l)
    {
      printf("\nThe substring is present\n");
      for(i=loc,j=0;s3[j]!='\0';i++,j++)
	s1[i]=s3[j];
      printf("\nThe new string is\n");
      puts(s1);
    }
  else
    printf("\nThe substring %s is not present in %s\n",s2,s1);
}
