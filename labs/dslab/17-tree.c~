#include<stdio.h>
#include<stdlib.h>

struct node{
  int data;
  struct node *lc;
  struct node *rc;
}*rootn=NULL;

void insert();
void inorder(struct node *root);
void preorder(struct node *root);
void postorder(struct node *root);
void searching();

main()
{
  int ch;
  do{
    printf("\n Menu");
    printf("\n1. Insert\n");
    printf("\b2.Inorder\n3.Preorder\n4.Postorder");
    printf("\n5.Searching \n6.Exit\tEnter your Choice : ");
    scanf("%d",&ch);
    switch(ch)
      {
      case 1: insert();
	break;
      case 2: inorder(rootn);
	break;
      case 3: preorder(rootn);
	break;
      case 4: postorder(rootn);
	break;
      case 5: searching();
	break;
      case 6 : exit(0);
      default:printf("\nEnter a Valid Choice");
      }
    
  }while(ch!=6);
}

void insert()
{
  int e;
  printf("\n Enter the Element to be Inserted: ");
  scanf("%d",&e);
  struct node *x,*ptr,*parent;
  x=(struct node *)malloc(sizeof(struct node));
  ptr=(struct node *)malloc(sizeof(struct node));
  parent=(struct node *)malloc(sizeof(struct node));
  x->data=e;
  x->lc=NULL;
  x->rc=NULL;
  if(rootn==NULL)
    {
      rootn = x;
    }
  else
    {
      ptr = rootn;
      while(ptr!=NULL)
	{
	  parent = ptr;
	  if(e>ptr->data)
	    ptr=ptr->rc;
	  else
	    ptr=ptr->lc;
	}
      if(e>parent->data)
	parent->rc=x;
      else
	parent->lc=x;
    }
}

void inorder(struct node *root)
{
  struct node *ptr;
  ptr = (struct node *)malloc(sizeof(struct node));
  ptr = root;
  if(ptr!=NULL)
  {
    inorder(ptr->lc);
    printf(" %d ",ptr->data);
    inorder(ptr->rc);
  }
}
      
void preorder(struct node *root)
{
  struct node *ptr;
  ptr = (struct node *)malloc(sizeof(struct node));
  ptr = root;
  if(ptr!=NULL)
  {
     printf(" %d ",ptr->data);
    preorder(ptr->lc);
    preorder(ptr->rc);
  }
}
      

void postorder(struct node *root)
{
  struct node *ptr;
  ptr = (struct node *)malloc(sizeof(struct node));
  ptr = root;
  if(ptr!=NULL)
  {
    postorder(ptr->lc);
    postorder(ptr->rc);
    printf(" %d ",ptr->data);
  }
}
      
void searching()
{
  int flag=0,item;
  printf("\nEnter the Element to be Searched ");
  scanf("%d",&item);
  struct node *ptr;
  ptr = (struct node *)malloc(sizeof(struct node));
  ptr = rootn;
  while(ptr!=NULL)
  {
    if(item<ptr->data)
      ptr=ptr->lc;
    else if(item>ptr->data)
      ptr=ptr->rc;
    else if(item==ptr->data)
      flag=1;
  }
  if(flag==1)
    printf("\nElement found");
  else
    printf("\n Element not Found");
}
      
